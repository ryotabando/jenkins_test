name: Create Release Notes

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get the previous tag
        id: get_previous_tag
        run: |
          current_tag=${GITHUB_REF#refs/tags/}
          previous_tag=$(git tag --sort=-creatordate | grep -E '^v' | grep -v $current_tag | head -n 1)
          echo "::set-output name=PREVIOUS_TAG::$previous_tag"

      - name: Get the current tag
        id: get_current_tag
        run: |
          current_tag=${GITHUB_REF#refs/tags/}
          echo "::set-output name=CURRENT_TAG::$current_tag"

      - name: Generate release notes
        id: generate_release_notes
        run: |
          previous_tag=${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}
          current_tag=${{ steps.get_current_tag.outputs.CURRENT_TAG }}
          changes=$(git log $previous_tag..$current_tag --oneline)
          full_changelog=$(git log --oneline)
          echo "## Release Notes for $current_tag" > release_notes.md
          echo "Comparing $previous_tag...$current_tag" >> release_notes.md
          echo "## What's Changed" >> release_notes.md
          echo "$changes" >> release_notes.md
          echo "## Full Changelog" >> release_notes.md
          echo "$full_changelog" >> release_notes.md

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_current_tag.outputs.CURRENT_TAG }}
          release_name: Release-${{ steps.get_current_tag.outputs.CURRENT_TAG }}
          body_path: ./release_notes.md
